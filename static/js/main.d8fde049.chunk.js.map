{"version":3,"sources":["Components/Gallery.js","Components/FirstCard.js","Components/MoreCards.js","Components/Body.js","App.js","index.js"],"names":["Gallery","props","loadStatus","isLoading","pictures","map","item","index","Carousel","Item","className","src","alt","indicators","interval","FirstCard","Card","style","width","initialData","nuotraukos","Body","Title","marke","ListGroup","ListGroupItem","modelis","metai","kaina","MoreCards","cards","newData","url","useState","setInitialData","setNewData","setIsLoading","handleErrors","err","response","alert","status","request","message","useEffect","axios","get","then","data","catch","Container","fluid","Jumbotron","Row","Button","onClick","items","variant","App","ReactDOM","render","document","getElementById"],"mappings":"kNAyBeA,MAtBf,SAAiBC,GACf,IAAMC,EAAaD,EAAME,UACrBC,EAAWH,EAAMG,SAarB,OAXmB,IAAfF,EACFE,EAAW,IACa,IAAfF,IACTE,EAAWA,EAASC,KAAI,SAACC,EAAMC,GAC7B,OACE,cAACC,EAAA,EAASC,KAAV,UACE,qBAAKC,UAAU,gBAAgBC,IAAKL,EAAMM,IAAKL,KAD7BA,OAOxB,cAACC,EAAA,EAAD,CAAUK,YAAY,EAAOC,SAAU,KAAvC,SACGV,K,uBCGQW,MAhBf,SAAmBd,GACjB,OACE,eAACe,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWR,UAAU,wBAA3C,UACE,cAAC,EAAD,CAASP,UAAWF,EAAME,UAAWC,SAAUH,EAAMkB,YAAYC,aACjE,cAACJ,EAAA,EAAKK,KAAN,UACE,cAACL,EAAA,EAAKM,MAAN,UAAarB,EAAMkB,YAAYI,UAEjC,eAACC,EAAA,EAAD,CAAWd,UAAU,mBAArB,UACE,eAACe,EAAA,EAAD,uBAAyBxB,EAAMkB,YAAYO,WAC3C,eAACD,EAAA,EAAD,qBAAuBxB,EAAMkB,YAAYQ,SACzC,eAACF,EAAA,EAAD,CAAef,UAAU,yCAAzB,oBAA0ET,EAAMkB,YAAYS,MAA5F,oBCcOC,MAxBf,SAAmB5B,GACjB,IAAI6B,EAAQ7B,EAAM8B,QAAQ1B,KAAI,SAACC,EAAMC,GACnC,OACE,eAACS,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAuBR,UAAU,wBAAvD,UACE,cAAC,EAAD,CAASP,UAAWF,EAAME,UAAWC,SAAUE,EAAKc,aACpD,cAACJ,EAAA,EAAKK,KAAN,UACE,cAACL,EAAA,EAAKM,MAAN,UAAahB,EAAKiB,UAEpB,eAACC,EAAA,EAAD,CAAWd,UAAU,mBAArB,UACE,eAACe,EAAA,EAAD,uBAAyBnB,EAAKoB,WAC9B,eAACD,EAAA,EAAD,qBAAuBnB,EAAKqB,SAC5B,eAACF,EAAA,EAAD,CAAef,UAAU,yCAAzB,oBAA0EJ,EAAKsB,MAA/E,kBARkCrB,MAc1C,OACE,mCACGuB,K,iDC6BQT,MA9Cf,WACE,IAAMW,EAAM,kDADE,EAEwBC,mBAAS,IAFjC,mBAEPd,EAFO,KAEMe,EAFN,OAGgBD,mBAAS,IAHzB,mBAGPF,EAHO,KAGEI,EAHF,OAIoBF,oBAAS,GAJ7B,mBAIP9B,EAJO,KAIIiC,EAJJ,KAMd,SAASC,EAAaC,GAChBA,EAAIC,SACNC,MAAM,wCAA0CF,EAAIC,SAASE,QACpDH,EAAII,QACbF,MAAM,8BAENA,MAAM,QAASF,EAAIK,SAqBvB,OAjBAC,qBAAU,WACRC,IAAMC,IAAId,GACPe,MAAK,SAACR,GACLL,EAAeK,EAASS,MACxBZ,GAAa,MAEda,MAAMZ,KACR,IAWD,cAACa,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,CAAWlC,YAAaA,EAAahB,UAAWA,IAChD,cAAC,EAAD,CAAW4B,QAASA,EAAS5B,UAAWA,OAE1C,cAACmD,EAAA,EAAD,CAAQC,QAfd,WACEV,IAAMC,IAAId,GACPe,MAAK,SAACR,GACLJ,GAAW,SAAAqB,GAAK,4BAAQA,GAAR,CAAejB,EAASS,aAEzCC,MAAMZ,IAUyBoB,QAAQ,UAAtC,gCCzCOC,MANf,WACE,OACE,cAAC,EAAD,K,MCIJC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8fde049.chunk.js","sourcesContent":["import React from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nfunction Gallery(props) {\r\n  const loadStatus = props.isLoading\r\n  let pictures = props.pictures\r\n\r\n  if (loadStatus === true) {\r\n    pictures = ''\r\n  } else if (loadStatus === false) {\r\n    pictures = pictures.map((item, index) => {\r\n      return (\r\n        <Carousel.Item key={index}>\r\n          <img className=\"d-block w-100\" src={item} alt={index} />\r\n        </Carousel.Item>)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Carousel indicators={false} interval={null}>\r\n      {pictures}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default Gallery\r\n\r\n\r\n","import React from 'react'\r\nimport Gallery from './Gallery'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\r\n\r\n\r\nfunction FirstCard(props) {\r\n  return (\r\n    <Card style={{ width: '18rem' }} className='text-center mx-2 my-2'>\r\n      <Gallery isLoading={props.isLoading} pictures={props.initialData.nuotraukos} />\r\n      <Card.Body>\r\n        <Card.Title>{props.initialData.marke}</Card.Title>\r\n      </Card.Body>\r\n      <ListGroup className=\"list-group-flush\">\r\n        <ListGroupItem>Modelis: {props.initialData.modelis}</ListGroupItem>\r\n        <ListGroupItem>Metai: {props.initialData.metai}</ListGroupItem>\r\n        <ListGroupItem className='border border-success font-weight-bold'>Kaina: {props.initialData.kaina} €</ListGroupItem>\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FirstCard\r\n\r\n","import React from 'react'\r\nimport Gallery from './Gallery'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\r\n\r\n\r\nfunction MoreCards(props) {\r\n  let cards = props.newData.map((item, index) => {\r\n    return (\r\n      <Card style={{ width: '18rem' }} key={index} className='text-center mx-2 my-2'>\r\n        <Gallery isLoading={props.isLoading} pictures={item.nuotraukos} />\r\n        <Card.Body>\r\n          <Card.Title>{item.marke}</Card.Title>\r\n        </Card.Body>\r\n        <ListGroup className=\"list-group-flush\">\r\n          <ListGroupItem>Modelis: {item.modelis}</ListGroupItem>\r\n          <ListGroupItem>Metai: {item.metai}</ListGroupItem>\r\n          <ListGroupItem className='border border-success font-weight-bold'>Kaina: {item.kaina} €</ListGroupItem>\r\n        </ListGroup>\r\n      </Card>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {cards}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoreCards","import React, { useState, useEffect } from 'react'\r\nimport FirstCard from './FirstCard'\r\nimport MoreCards from './MoreCards'\r\nimport axios from 'axios'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nfunction Body() {\r\n  const url = 'https://backend.daviva.lt/API/InformacijaTestui'\r\n  const [initialData, setInitialData] = useState([])\r\n  const [newData, setNewData] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  function handleErrors(err) {\r\n    if (err.response) {\r\n      alert('Issue with the response, error code: ' + err.response.status)\r\n    } else if (err.request) {\r\n      alert('Issue the with the request')\r\n    } else {\r\n      alert('Error', err.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setInitialData(response.data)\r\n        setIsLoading(false)\r\n      })\r\n      .catch(handleErrors)\r\n  }, [])\r\n\r\n  function handleClick() {\r\n    axios.get(url)\r\n      .then((response) => {\r\n        setNewData(items => [...items, response.data])\r\n      })\r\n      .catch(handleErrors)\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Jumbotron>\r\n        <Row>\r\n          <FirstCard initialData={initialData} isLoading={isLoading} />\r\n          <MoreCards newData={newData} isLoading={isLoading} />\r\n        </Row>\r\n        <Button onClick={handleClick} variant=\"primary\">Pridėti</Button>\r\n      </Jumbotron>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Body","import Body from '../src/Components/Body'\n\nfunction App() {\n  return (\n    <Body />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}